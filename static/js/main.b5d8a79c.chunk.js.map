{"version":3,"sources":["Firebase/NameCheck.js","Firebase/Util.js","Firebase/Register.js","Firebase/sendResetPasswordEmail.js","Firebase/SignIn.js","Firebase/SignOut.js","Firebase/useAuth.js","Firebase/AuthListener.js","styles/styles.js","Forms/FormWrapper.js","Popup.js","Forms/Login.js","Forms/Register.js","Forms/ResetPassword.js","ProtectedRoute.js","Firestore/getUsername.js","Firestore/getCurrentUsername.js","Home/Home.js","Chat/ChatMessage.js","Chat/sendMessage.js","Chat/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["nameCheck","username","a","firebase","firestore","collection","doc","get","then","exists","catch","err","currentUser","user","auth","id","uid","registerName1","userID","console","log","set","name","registerName2","uuid","register","email","password","createUserWithEmailAndPassword","sendResetPasswordEmail","emailAdress","sendPasswordResetEmail","signIn","signInWithEmailAndPassword","res","signOut","Error","useAuth","useState","authInfo","setAuthInfo","useEffect","callback","onAuthStateChanged","styles","container","marginTop","marginBottom","marginLeft","marginRight","textAlign","headerImg","height","width","minHeight","headerImgDiv","formWrap","padding","borderRadius","boxHeader","fontSize","paddingBottom","bottom","justifyItems","links","textDecoration","chatTitle","window","innerWidth","paddingLeft","paddingRight","chatWrap","overflowY","chatInput","popup","position","right","profileImage","FormWrapper","props","style","src","process","alt","className","children","Popup","show","isShow","setShow","Col","xs","Toast","onClose","delay","autohide","Header","Body","msg","Login","history","useHistory","document","title","setEmail","setPassword","validated","setValidated","invalidUser","setInvalidUser","signMeIn","event","trim","push","preventDefault","stopPropagation","submit","currentTarget","checkValidity","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","type","placeholder","value","onChange","e","target","Feedback","Button","variant","to","Register","setUsername","confirmPassword","setConfirmPassword","usernameTakenError","setUsernameTakenError","passwordNotMatch","setPasswordNotMatch","validEmail","setValidEmail","invalidPassword","setInvalidPassword","registerMe","message","onRegister","reCaptchaKey","Row","as","isInvalid","ResetPassword","showMsg","setShowMsg","InvalidEmail","setInvalidEmail","onReset","ProtectedRoute","isAuth","UnprotectedRoute","getUsername","userId","data","getCurrentUsername","current","Home","loading","setLoading","setUser","logout","alert","onClick","size","block","ChatMessage","text","messageClass","textMarginRatio","round","sendMessage","messageRef","add","createdAt","FieldValue","serverTimestamp","Chat","end","useRef","chat_msg","set_msg","query","orderBy","limit","useCollectionData","idField","messages","send_msg","scrollIntoView","behavior","confirm","map","ref","InputGroup","FormControl","aria-label","aria-describedby","onKeyDown","keyCode","Append","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5d8a79c.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n// const firestore = firebase.firestore();\r\n\r\nexport const nameCheck = async (username) => {\r\n    return await firebase.firestore().collection('names').doc(username).get().then(doc => {\r\n        // if exists in collection, throw error and cancel operation\r\n        if (doc.exists) {\r\n            throw \"Already exists\"\r\n        }\r\n    }).catch(err => {\r\n        throw \"DB error\"\r\n    })\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport const currentUser = () => {\r\n    const user = firebase.auth().currentUser\r\n    if (!user) return null\r\n    return {\r\n        id: user.uid,\r\n    }\r\n}\r\n\r\nexport const registerName1 = async (username) => {\r\n    // add user to both names and users\r\n    const userID = currentUser().id\r\n    console.log(currentUser().id, username)\r\n    return await firebase.firestore().collection('users').doc(userID).set({\r\n        name: username\r\n    })\r\n}\r\nexport const registerName2 = async (username) => {\r\n    // add user to both names and users\r\n    const userID = currentUser().id\r\n    return await firebase.firestore().collection('names').doc(username).set({\r\n        uuid: userID\r\n    })\r\n}\r\n","import firebase from 'firebase/app'\r\nimport {currentUser} from './Util'\r\n\r\nexport const register = async (email, password) => {\r\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport const sendResetPasswordEmail = async emailAdress => {\r\n    await firebase.auth().sendPasswordResetEmail(emailAdress)\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport const signIn = async (email, password) => {\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(res => {return true})\r\n        .catch(res => {return res})\r\n}\r\n","import firebase from 'firebase/app'\r\n\r\nexport const signOut = async () => {\r\n    try {\r\n        await firebase.auth().signOut()\r\n    } catch (e) {\r\n        throw new Error(\"Cannot sign out\")\r\n    }\r\n}","import {useState, useEffect} from 'react'\r\nimport {AuthListener} from './AuthListener'\r\nimport {currentUser} from './Util'\r\n\r\n// custom hook\r\nexport const useAuth = () => {\r\n    const [authInfo, setAuthInfo] = useState(()=>{\r\n        const user = currentUser()\r\n        return {user}\r\n    })\r\n\r\n    // on mount => set auth listener\r\n    useEffect(() => {\r\n        const unsub = AuthListener(user => {\r\n            setAuthInfo({user})\r\n        })\r\n\r\n        return unsub\r\n    }, [])\r\n\r\n    return authInfo\r\n}","import firebase from 'firebase/app'\r\n\r\nexport const AuthListener = (callback) => {\r\n    const onChange = (user) => {\r\n        if (user) {\r\n            callback({})\r\n        } else {\r\n            callback(null)\r\n        }\r\n    }\r\n\r\n    return firebase.auth().onAuthStateChanged(onChange)\r\n}\r\n\r\n","// all inline styles\r\nexport const styles = {\r\n    container: {\r\n        marginTop: \"5vh\",\r\n        marginBottom: \"3vh\",\r\n        marginLeft: \"50px\",\r\n        marginRight: \"50px\",\r\n        textAlign: \"left\",\r\n    },\r\n    headerImg: {\r\n        height: \"25vh\",\r\n        width: \"100vw\",\r\n        minHeight: \"100px\",\r\n        marginTop: \"20px\",\r\n        marginLeft: \"3vw\",\r\n        textAlign: \"center\",\r\n    },\r\n    headerImgDiv: {\r\n        textAlign: \"center\",\r\n    },\r\n    formWrap: {\r\n        padding: \"40px\",\r\n        borderRadius: \"20px\",\r\n    },\r\n    boxHeader: {\r\n        textAlign: \"center\",\r\n        fontSize: \"3em\",\r\n        paddingBottom: \"20px\",\r\n    },\r\n    bottom: {\r\n        marginTop: \"40px\",\r\n        marginBottom: \"40px\",\r\n        textAlign: \"center\",\r\n        justifyItems: \"center\",\r\n    },\r\n    links: {\r\n        textDecoration: \"none\",\r\n    },\r\n    chatTitle: {\r\n        fontSize: window.innerWidth > 900 ? \"3em\" : \"1.5em\",\r\n        marginTop: \"40px\",\r\n        marginBottom: \"20px\",\r\n        paddingLeft: \"20px\",\r\n        paddingRight: \"20px\",\r\n    },\r\n    chatWrap: {\r\n        height: \"70vh\",\r\n        overflowY: \"auto\",\r\n        padding: \"40px\",\r\n        borderRadius: \"20px\",\r\n    },\r\n    chatInput: {\r\n        marginTop: \"15px\",\r\n        borderRadius: \"20px\",\r\n    },\r\n    popup: {\r\n        position: \"fixed\",\r\n        right: \"10px\",\r\n        bottom: \"10px\",\r\n    },\r\n\r\n    // profile image\r\n    profileImage: {\r\n        marginLeft: \"4px\",\r\n        width: \"32px\",\r\n        height: \"32px\",\r\n        borderRadius: \"32px\",\r\n    }\r\n}","import react, {useState} from 'react'\r\nimport {styles} from '../styles/styles.js'\r\n\r\nexport const FormWrapper = (props) => {\r\n    // warps around all forms, includes the logo and the form below\r\n    return (\r\n        <>\r\n            <div style={styles.headerImgDiv}>\r\n                <img src={process.env.PUBLIC_URL + '/img/logo.svg'} alt=\"header img\" style={styles.headerImg}/>\r\n            </div>\r\n            <div className=\"main\">\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}","import react, {useEffect, useState} from 'react'\r\nimport {styles} from './styles/styles.js'\r\nimport {Col, Toast} from 'react-bootstrap'\r\n\r\nexport const Popup = (props) => {\r\n    const [isShow, setShow] = useState(props.show)\r\n\r\n    useEffect(()=> {\r\n        setShow(props.show)\r\n    }, [props.show])\r\n\r\n    return (\r\n        <Col xs={6} >\r\n            <Toast onClose={() => setShow(!isShow)} show={isShow} delay={3500} autohide style={styles.popup}> \r\n            <Toast.Header>\r\n                <img\r\n                src=\"holder.js/20x20?text=%20\"\r\n                className=\"rounded mr-2\"\r\n                alt=\"\"\r\n                />\r\n                <strong className=\"mr-auto\">Chatter</strong>\r\n                <small></small>\r\n            </Toast.Header>\r\n            <Toast.Body>{props.msg}</Toast.Body>\r\n            </Toast>\r\n        </Col>\r\n    )\r\n}\r\n","import react, {useState, useEffect} from 'react'\r\nimport {Form, Button, Row, Col, Toast} from 'react-bootstrap'\r\nimport { BrowserRouter as NavLink, Link, useHistory } from \"react-router-dom\"\r\n\r\nimport {styles} from '../styles/styles.js'\r\nimport {signIn} from '../Firebase/Firebase'\r\nimport {Popup} from '../Popup'\r\n\r\nexport const Login = () => {\r\n    // login is also the front/first screen\r\n    const history = useHistory()\r\n    // change title\r\n    useEffect(() => {\r\n        document.title = \"Chatter | Login\"\r\n    }, [])\r\n\r\n    // email password\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [validated, setValidated] = useState(false)\r\n    const [invalidUser, setInvalidUser] = useState(false)\r\n\r\n    const signMeIn = async (event) => {\r\n        await signIn(email.trim(), password)\r\n            .then(res => {\r\n                // console.log(res)\r\n                if (res === true) { \r\n                    history.push('/home')\r\n                } else {\r\n                    event.preventDefault()\r\n                    event.stopPropagation()\r\n                    setInvalidUser(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    const submit = async (event) => {\r\n        setValidated(false)\r\n        setInvalidUser(false)\r\n\r\n        // front end check\r\n        const form = event.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n            setValidated(true)\r\n            return\r\n        }\r\n        // authenticate\r\n        await signMeIn(event)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container shadow-lg glassy\" style={styles.formWrap}>\r\n            <h2 style={styles.boxHeader}>Login</h2>\r\n            <Form noValidate validated={validated} onSubmit={submit}>\r\n                <Form.Group controlId=\"formBasicEmail\" controlId=\"validationUserEmail\">\r\n                    <Form.Label><b>Email</b></Form.Label>\r\n                    <Form.Control required type=\"email\" placeholder=\"Enter email\" title=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        This email is not valid\r\n                    </Form.Control.Feedback>\r\n                    {/* <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                    </Form.Text> */}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\" controlId=\"validationUserPassword\">\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control required type=\"password\" placeholder=\"Password\" title=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        The password does not match the email given\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group> */}\r\n                <div className=\"submit_button\">\r\n                <Button variant=\"primary\" type=\"submit\" title=\"Login\">\r\n                    Log In\r\n                </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n        <div style={styles.bottom} className=\"inline\">\r\n            <p><Link to=\"/password_reset\" title=\"Reset Password\">Forget password?</Link></p>\r\n            <p style={{paddingLeft: \"30vw\"}}>New user? <Link to=\"/register\" title=\"Sign Up\">Sign up here</Link></p>\r\n        </div>\r\n\r\n        {/* invalid user toast */}\r\n        <Popup msg='Your username or password is incorrect' show={invalidUser} />\r\n        </>\r\n    )\r\n}","import { BrowserRouter as NavLink, Link, useHistory } from \"react-router-dom\"\r\nimport react, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\n\r\nimport {register, nameCheck, registerName1, registerName2} from '../Firebase/Firebase'\r\nimport {styles} from '../styles/styles.js'\r\nimport {Popup} from '../Popup'\r\n\r\n// recaptcha\r\nimport { GoogleReCaptchaProvider, GoogleReCaptcha } from 'react-google-recaptcha-v3'\r\n\r\nexport const Register = () => {\r\n    // registers user\r\n    \r\n    const history = useHistory()\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [usernameTakenError, setUsernameTakenError] = useState(false)\r\n    const [passwordNotMatch, setPasswordNotMatch] = useState(false)\r\n    const [validEmail, setValidEmail] = useState(false)\r\n    const [invalidPassword, setInvalidPassword] = useState(false)\r\n    const [validated, setValidated] = useState(false)\r\n    // change title\r\n    useEffect(() => {\r\n        document.title = \"Chatter | Register\"\r\n    }, []);\r\n    \r\n    const registerMe = async () => {\r\n        await nameCheck(username.trim()).catch(res => {\r\n            setUsernameTakenError(true)\r\n            console.log(res)\r\n            throw \"No username\"\r\n        })\r\n        await register(email, password)\r\n            .then(res => {\r\n                    if (res !== true) {\r\n                        setValidated(true)\r\n                    }\r\n                }).catch(res => {\r\n                console.log(res.message)\r\n                setInvalidPassword(true)\r\n                throw \"Could not register\"\r\n            })\r\n        await registerName1(username.trim())\r\n        await registerName2(username.trim()).then(()=>{\r\n            history.push('/')\r\n        })\r\n    }\r\n\r\n    const onRegister = async (event) => {\r\n        // reset state\r\n        setUsernameTakenError(false)\r\n        setValidated(false)\r\n        setPasswordNotMatch(false)\r\n        setValidEmail(false)\r\n        setInvalidPassword(false)\r\n\r\n        // will redirect when successful\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n\r\n        // front end check\r\n        const form = event.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            setValidated(true)\r\n            return\r\n        } else if (password !== confirmPassword) {\r\n            setPasswordNotMatch(true)\r\n            setValidated(true)\r\n            return\r\n        }\r\n        // authenticate\r\n        await registerMe().catch(res=>{\r\n            // console.log(res)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GoogleReCaptchaProvider reCaptchaKey=\"6LelIWwaAAAAALvF27U_InBwNV6Ad_PB8T6RcC3A\">\r\n        <>\r\n        <div className=\"container shadow-lg glassy\" style={styles.formWrap}>\r\n            <h2 style={styles.boxHeader}>Register</h2>\r\n            <Form noValidate validated={validated} onSubmit={onRegister}>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                    <Form.Label><b>Username</b></Form.Label>\r\n                    <Form.Control required isInvalid={usernameTakenError} type=\"text\" placeholder=\"Username\" title=\"Username\" value={username} onChange={e=>setUsername(e.target.value)}/>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {!username.trim() || usernameTakenError ? \"Username taken\" : \"\"}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label><b>Email</b></Form.Label>\r\n                    <Form.Control required isInvalid={validEmail} type=\"email\" placeholder=\"Enter email\" title=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        This email is not valid\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                    <Form.Label><b>Password</b></Form.Label>\r\n                    <Form.Control required isInvalid={invalidPassword} type=\"password\" placeholder=\"Password\" title=\"Password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        This password is not valid (should be at least 6 characters)\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridPassword2\">\r\n                    <Form.Label><b>Confirm Password</b></Form.Label>\r\n                    <Form.Control required isInvalid={passwordNotMatch} type=\"password\" placeholder=\"Confirm Password\" title=\"Confirm Password\"  value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Passwords do not match\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form.Row>\r\n\r\n            {/* ~~Captcha~~ => (react-google-recaptcha) v3 */}\r\n            {/* <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"Robot Check\" />\r\n            </Form.Group> */}\r\n\r\n            <div className=\"submit_button\">\r\n            <Button variant=\"primary\" type=\"submit\" className=\"submit_button\" title=\"Sign Up\">\r\n                Sign Up\r\n            </Button>\r\n            </div>\r\n            </Form>\r\n        </div>\r\n        <div style={styles.bottom} className=\"inline\">\r\n            <p><Link to=\"/login\" title=\"Back to Login\">Back to login</Link></p>\r\n        </div>\r\n        </>\r\n        {/* password does not match toast */}\r\n        <Popup msg='Passwords do not match' show={passwordNotMatch} />\r\n        </GoogleReCaptchaProvider>\r\n    )\r\n}","import { BrowserRouter as NavLink, Link } from \"react-router-dom\"\r\nimport React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nimport {sendResetPasswordEmail} from '../Firebase/Firebase'\r\nimport {styles} from '../styles/styles.js'\r\nimport {Popup} from '../Popup'\r\n\r\nexport const ResetPassword = () => {\r\n    // resets password given email\r\n    // change title\r\n    useEffect(() => {\r\n        document.title = \"Chatter | Reset Password\"\r\n    }, [])\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [showMsg, setShowMsg] = useState(false)\r\n    const [validated, setValidated] = useState(false)\r\n    const [InvalidEmail, setInvalidEmail] = useState(false)\r\n\r\n    // calls firebase reset\r\n    const onReset = async (event) => {\r\n        setInvalidEmail(false)\r\n        \r\n        // no refresh\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        // check form\r\n        const form = event.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            setInvalidEmail(true)\r\n            return\r\n        }\r\n\r\n        // sent reset email via firebase\r\n        await sendResetPasswordEmail(email.trim()).then(()=> {\r\n            setValidated(true)\r\n            setInvalidEmail(false)\r\n            setShowMsg(true)\r\n        }).catch(res => {\r\n            setInvalidEmail(true)\r\n            setValidated(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container shadow-lg glassy\" style={styles.formWrap}>\r\n            <h2 style={styles.boxHeader}>Reset Password</h2>\r\n            <Form noValidate validated={validated} onSubmit={onReset}> \r\n                <Form.Group controlId=\"formBasicEmail\" controlId=\"validationUserEmail\">\r\n                    <Form.Label><b>Email</b></Form.Label>\r\n                    <Form.Control required isInvalid={InvalidEmail} type=\"email\" placeholder=\"Enter email\" title=\"Email\" value={email} onChange={e => setEmail(e.target.value)} />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        This email is not valid\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <div className=\"submit_button\">\r\n                <Button variant=\"primary\" type=\"submit\" className=\"submit_button\" title=\"Submit\">\r\n                    Submit\r\n                </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n        <div style={styles.bottom} className=\"inline\">\r\n            <p><Link to=\"/login\" title=\"Back to Login\">Back to login</Link></p>\r\n        </div>\r\n        {/* Sent email */}\r\n        <Popup msg='Your email has been sent' show={showMsg} />\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nexport const ProtectedRoute = ({isAuth, ...props}) => {\r\n    // if not signed in, redirect to sign in\r\n    if (!isAuth) {\r\n        return <Redirect to=\"/\" />\r\n    } else {\r\n        return (<Route {...props} />)\r\n    }\r\n}\r\n\r\nexport const UnprotectedRoute = ({isAuth, ...props}) => {\r\n    // if is signed in, redirect to home\r\n    if (isAuth) {\r\n        return <Redirect to=\"/home\" />\r\n    } else {\r\n        return (<Route {...props} />)\r\n    }\r\n}","import firebase from 'firebase/app'\r\n\r\nexport const getUsername = async (userId) => {\r\n    // gets user\r\n    const data = await firebase.firestore()\r\n        .collection('users')\r\n        .doc(userId)\r\n        .get()\r\n\r\n    const user = data.data()\r\n\r\n    if (!user) return null\r\n    \r\n    return {user}\r\n}","import firebase from 'firebase/app'\r\nimport {getUsername} from './getUsername'\r\nimport {currentUser} from '../Firebase/Firebase'\r\n\r\nexport const getCurrentUsername = async () => {\r\n    // gets user\r\n    const current = currentUser()\r\n    // if not logged in, return null\r\n    if (!current) return null\r\n\r\n    return await getUsername(current.id)\r\n}","import react, {useState, useEffect} from 'react'\r\nimport { BrowserRouter as NavLink, useHistory } from \"react-router-dom\"\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\n\r\nimport { currentUser, signOut } from '../Firebase/Firebase'\r\nimport {getCurrentUsername} from '../Firestore/Firestore'\r\nimport {styles} from '../styles/styles.js'\r\nimport {Popup} from '../Popup'\r\n\r\nexport default function Home() {\r\n    // home is just two buttons currently, join a chat room and logout\r\n    const [loading, setLoading] = useState(false)\r\n    const [user, setUser] = useState('')\r\n\r\n    const history = useHistory()\r\n    // TODO: chat UID\r\n    const handleClick = () => {\r\n        // loading popup\r\n        setLoading(true)\r\n        setLoading(false)\r\n\r\n        // TODO: pair with someone and send to room\r\n        const UID = \"1\"\r\n        history.push('/chat/'+ UID)\r\n    }\r\n\r\n    // change title\r\n    useEffect(() => {\r\n        document.title = \"Chatter | Home\"\r\n        // current user\r\n        const setUsername = async () => {\r\n            const result = await getCurrentUsername().then(\r\n                // sets username\r\n                e=>{\r\n                    setUser(e.user.name)\r\n                }\r\n            )\r\n        }\r\n\r\n        setUsername()\r\n    }, []);\r\n\r\n    const logout = async () => {\r\n        // logout and go to login\r\n        try {\r\n            await signOut()\r\n            history.push('/')\r\n        } catch (e) {\r\n            alert(e.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container shadow-lg glassy\" style={styles.formWrap}>\r\n            <h2 style={styles.boxHeader}>Hello {user}</h2>\r\n            <Form>\r\n            <div className=\"home-buttons\">\r\n                <Button variant=\"primary\" type=\"submit\" className=\"submit_button\" onClick={handleClick} size=\"lg\" title=\"Join Random Chatroom\" block>\r\n                    Join Random Chat Room\r\n                </Button>\r\n                <Button variant=\"danger\" className=\"submit_button\" size=\"lg\" block onClick={logout} title=\"Logout\" >\r\n                    Logout\r\n                </Button>\r\n            </div>\r\n            </Form>\r\n        </div>\r\n        <Popup msg='Finding a match 🔎' show={loading} />\r\n        </>\r\n    )\r\n}","import Avatar from 'react-avatar';\r\nimport {currentUser} from './../Firebase/Firebase'\r\nimport {getUsername} from './../Firestore/Firestore'\r\nimport {styles} from '../styles/styles.js'\r\n\r\nexport const ChatMessage = ({message}) => {\r\n    const {text, uuid, username} = message\r\n\r\n    const messageClass = uuid === currentUser().id ? \"speak-me\" : \"speak-you\"\r\n\r\n    return (\r\n        <>\r\n        <p title={messageClass === \"speak-me\" ? \"You\" : username} className={messageClass}>{text}{messageClass === \"speak-me\" ? <></> : <Avatar style={{marginLeft: \"10px\"}} size={\"32px\"} textMarginRatio={.1} name={username} round={true} />}</p>\r\n        </>\r\n    )\r\n}","import {currentUser} from './../Firebase/Firebase'\r\nimport firebase from 'firebase/app'\r\n\r\nexport const sendMessage = async (messageRef, message, username) => {\r\n    const uuid = currentUser().id\r\n\r\n    return await messageRef.add({\r\n        text: message,\r\n        username,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uuid,\r\n    })\r\n}","import react, {useState, useEffect, useCallback, useRef} from 'react'\r\nimport { BrowserRouter as NavLink, Link, useHistory } from \"react-router-dom\"\r\nimport {Form, Button, Col, InputGroup, FormControl} from 'react-bootstrap'\r\nimport firebase from 'firebase/app'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n// icon from react-icons\r\nimport {MdSend} from 'react-icons/md';\r\n\r\nimport {getCurrentUsername} from './../Firestore/Firestore'\r\nimport {ChatMessage} from './ChatMessage'\r\nimport {sendMessage} from './sendMessage'\r\nimport {styles} from '../styles/styles.js'\r\n\r\nexport default function Chat() {\r\n    // a standard chat room\r\n    const history = useHistory()\r\n    const end = useRef()\r\n    const [chat_msg, set_msg] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    // exiting\r\n    const leave = () => {\r\n        let confirmer = window.confirm(\"If you leave now you will not see these messages again\")\r\n        if( confirmer == true ) {\r\n            history.push('/home')\r\n        }\r\n    }\r\n\r\n    // detect enter key\r\n    const checkEnter = (e) => {\r\n        if (e.keyCode === 13) {\r\n            send_msg()\r\n        }\r\n    }\r\n\r\n    // change title\r\n    useEffect(() => {\r\n        document.title = \"Chatter | Chat\"\r\n\r\n        // current user\r\n        const setUser = async () => {\r\n            const result = await getCurrentUsername().then(\r\n                // sets username\r\n                e=>{\r\n                    setUsername(e.user.name)\r\n                }\r\n            )\r\n        }\r\n        setUser()\r\n    }, [])\r\n\r\n    const messageRef = firebase.firestore().collection('messages')\r\n    const query = messageRef.orderBy('createdAt').limit(30)\r\n\r\n    const [messages] = useCollectionData(query, {idField: \"id\"})\r\n\r\n    // send message\r\n    const send_msg = async () => {\r\n        // append message to state\r\n        // console.log(chat_msg)\r\n        // if nothing, return\r\n        if (chat_msg.trim() === '') { return }\r\n\r\n        // TODO: websockets + check message if time\r\n        set_msg('')\r\n        console.log(username)\r\n        await sendMessage(messageRef, chat_msg.trim(), username)\r\n        end.current.scrollIntoView({behavior: 'smooth'})\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"backdropImgDiv\">\r\n                <img src={process.env.PUBLIC_URL + '/img/rotatedLogo.svg'} alt=\"Backdrop\" className=\"backdropImg\" />\r\n            </div>\r\n            <div className=\"inline bottom-space\">\r\n                <h2 style={styles.chatTitle} className=\"chat-title\">Chatting in room 1</h2>\r\n                <Button variant=\"danger\" type=\"submit\" className=\"leave_button\" onClick={leave} title=\"Leave chat room\">\r\n                    Leave\r\n                </Button>\r\n            </div>\r\n            <div className=\"container shadow-lg glassy\" style={styles.chatWrap}>\r\n                {/* chat message */}\r\n                {/* TODO: Map */}\r\n                {messages && messages.map((msg) => {\r\n                    return <ChatMessage message={msg} key={msg.id} />\r\n                })}\r\n                <div ref={end}></div>\r\n            </div>\r\n            {/* send message */}\r\n            <div>\r\n                <InputGroup className=\"mb-3 shadow-lg chat-input\">\r\n                    <FormControl\r\n                    aria-label=\"Chat message\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange = {(event)=>{\r\n                        // set message and clear\r\n                        set_msg(event.target.value)\r\n                    }}\r\n                    onKeyDown={checkEnter}\r\n                    value={chat_msg}\r\n                    title=\"Enter your message here\" \r\n                    />\r\n                    <InputGroup.Append>\r\n                        <Button variant=\"primary\" onClick={send_msg} title=\"Send\">\r\n                            <MdSend size={18} />\r\n                        </Button>\r\n                    </InputGroup.Append>\r\n                </InputGroup>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\"\r\n\r\nimport './App.css'\r\nimport { useAuth } from './Firebase/Firebase'\r\nimport {FormWrapper, Login, Register, ResetPassword} from './Forms/Forms'\r\nimport {ProtectedRoute, UnprotectedRoute} from './ProtectedRoute'\r\nimport Home from './Home/Home'\r\nimport Chat from './Chat/Chat'\r\n\r\n// bootstrap css\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n  const {user} = useAuth()\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* logo */}\r\n      {/* routes */}\r\n    <Router>\r\n      <Switch>\r\n        {/* Home Path */}\r\n        <UnprotectedRoute isAuth={!!user} exact path=\"/\">\r\n          <FormWrapper>\r\n            <Login />\r\n          </FormWrapper>\r\n        </UnprotectedRoute>\r\n        <Route path=\"/login\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n\r\n        <UnprotectedRoute isAuth={!!user} path=\"/register\">\r\n          <FormWrapper>\r\n            <Register />\r\n          </FormWrapper>\r\n        </UnprotectedRoute>\r\n        <UnprotectedRoute isAuth={!!user} path=\"/password_reset\">\r\n          <FormWrapper>\r\n            <ResetPassword />\r\n          </FormWrapper>\r\n        </UnprotectedRoute>\r\n        <ProtectedRoute isAuth={!!user} path=\"/home\">\r\n          <FormWrapper>\r\n            <Home />\r\n          </FormWrapper>\r\n        </ProtectedRoute>\r\n        \r\n        <ProtectedRoute isAuth={!!user} path=\"/chat\">\r\n          <Chat />\r\n        </ProtectedRoute>\r\n      </Switch>\r\n    </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\n// firebase auth\nimport firebase from 'firebase/app'\nimport 'firebase/analytics'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA1GGbvuriyk8-cii3oQJquDEFLpvj5dYU\",\n  authDomain: \"chatter-334a3.firebaseapp.com\",\n  projectId: \"chatter-334a3\",\n  storageBucket: \"chatter-334a3.appspot.com\",\n  messagingSenderId: \"459734418610\",\n  appId: \"1:459734418610:web:72170fc8a40fde017375ab\",\n  measurementId: \"G-V82FMJQT8M\"\n}\n\n// init firebase\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}